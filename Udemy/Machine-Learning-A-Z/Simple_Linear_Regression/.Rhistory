dataset = read.csv('Data.csv')
##taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#encoding categorical data Countries and  Purchased column
dataset$Country = factor(dataset$Country,
levels = c('France','Spain', 'Germany'),
labels = c(1,2,3)
)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1)
)
dataset = read.csv('Data.csv')
##taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#encoding categorical data Countries and  Purchased column
dataset$Country = factor(dataset$Country,
levels = c('France','Spain', 'Germany'),
labels = c(1,2,3)
)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1)
)
dataset = read.csv('Data.csv')
# data preprocessing
dataset = read.csv('Data.csv')
##taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#encoding categorical data Countries and  Purchased column
dataset$Country = factor(dataset$Country,
levels = c('France','Spain', 'Germany'),
labels = c(1,2,3)
)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1)
)
dataset = read.csv('Data.csv')
dataset = read.csv('Data.csv')
# data preprocessing
dataset = read.csv('Data.csv')
##taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#encoding categorical data Countries and  Purchased column
dataset$Country = factor(dataset$Country,
levels = c('France','Spain', 'Germany'),
labels = c(1,2,3)
)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1)
)
dataset = read.csv('Data.csv')
setwd("~/ML/Udemy")
pwd
help
# data preprocessing
dataset = read.csv('Data.csv')
##taking care of missing data
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
#encoding categorical data Countries and  Purchased column
dataset$Country = factor(dataset$Country,
levels = c('France','Spain', 'Germany'),
labels = c(1,2,3)
)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0,1)
)
View(dataset)
View(dataset)
install.packages('caTools')
library("caTools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
detach("package:caTools", unload=TRUE)
library(caTools)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
View(dataset)
View(dataset)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
training_set = scale(training_set)
test_set = scale(test_set)
training_set[, 2:3] = scale(training_set[, 2:3])
test_set[, 2:3] = scale(test_set[, 2:3])
setwd("~/ML/Udemy/Simple_Linear_Regression")
setwd("~/ML/Udemy/Simple_Linear_Regression")
dataset = read.csv('Salary_Data.csv')
View(dataset)
View(dataset)
View(test_set)
View(dataset)
View(dataset)
View(test_set)
View(training_set)
View(test_set)
library(caTools)
set.seed(123)
##Aqui ele separa a l√≥gica onde 80% vai ser o meu traning set  e 20% o meu test_set
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
View(test_set)
regressor = lm(formula = Salary ~YearsExperience, data = training_set)
.csv
summary(regressor)
y_pred = predict(regressor, newdata = test_set)
y_pred
View(test_set)
install.packages('ggplot2')
libreary(ggplot2)
library(ggplot2)
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y =  training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training set)')+
xlab('YearsExperience')+
ylab('Salary')
ggplot() +
geom_point(aes(x = test_setset$YearsExperience, y =  test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)')+
xlab('YearsExperience')+
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y =  test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)')+
xlab('YearsExperience')+
ylab('Salary')
